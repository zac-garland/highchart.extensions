js_examples %>%
map_dfr(~{
unnest(.x,lines) %>% pull(code_line) %>%
paste(collapse = "\n") %>%
prettifyAddins::prettify_V8(language = "javascript")
}) %>%
gather(key,value)
js_examples %>%
map_dfr(~{
unnest(.x,lines) %>% pull(code_line) %>%
paste(collapse = "\n") %>%
prettifyAddins::prettify_V8(language = "javascript")
}) %>%
gather(key,value) %>%
slice(1)
js_examples %>%
map_dfr(~{
unnest(.x,lines) %>% pull(code_line) %>%
paste(collapse = "\n") %>%
prettifyAddins::prettify_V8(language = "javascript")
}) %>%
gather(key,value) %>%
slice(1) %>%
pull(value)
js_examples %>%
map_dfr(~{
unnest(.x,lines) %>% pull(code_line) %>%
paste(collapse = "\n") %>%
prettifyAddins::prettify_V8(language = "javascript")
}) %>%
gather(key,value) %>%
slice(1) %>%
pull(value) %>%
stringr::str_split(line = .)
js_examples %>%
map_dfr(~{
unnest(.x,lines) %>% pull(code_line) %>%
paste(collapse = "\n") %>%
prettifyAddins::prettify_V8(language = "javascript")
}) %>%
gather(key,value) %>%
slice(1) %>%
pull(value) %>%
stringr::str_split("\n") %>%
unlist() %>%
tibble(line = .)
list.files(base_dir) %>%
map_dfr(~{
file.path(base_dir,.x) %>%
list.files() %>%
tibble(files = .) %>%
mutate(group = .x)
}) %>%
rowwise() %>%
mutate(
lines = map2(group,files,~{
read_lines(file.path(base_dir,.x,.y)) %>%
paste(collapse = "\n") %>%
prettifyAddins::prettify_V8(language = "javascript") %>%
str_split("\n") %>% unlist() %>% tibble(code_line = .)
})
) %>%
ungroup() %>%
filter(tools::file_ext(files)=="js") -> js_files
list.files(base_dir) %>%
map_dfr(~{
file.path(base_dir,.x) %>%
list.files() %>%
tibble(files = .) %>%
mutate(group = .x)
}) %>%
ungroup() %>%
filter(tools::file_ext(files)=="js") %>%
rowwise() %>%
mutate(
lines = map2(group,files,~{
read_lines(file.path(base_dir,.x,.y)) %>%
paste(collapse = "\n") %>%
prettifyAddins::prettify_V8(language = "javascript") %>%
str_split("\n") %>% unlist() %>% tibble(code_line = .)
})
) -> js_files
readr::read_lines("inst/highcharts.Rmd") %>%
tibble(line = .) %>%
filter(str_detect(line, "href=")) %>%
mutate(group = stringr::str_extract(line, "demo/[a-zA-Z-]+/")) %>%
select(group) %>%
mutate(group = stringr::str_remove_all(group,"demo\\/|\\/")) %>%
inner_join(js_files) %>%
unique() %>%
split(.$group) -> js_examples
js_examples %>%
map_dfr(~{
unnest(.x,lines) %>% pull(code_line) %>%
paste(collapse = "\n") %>%
prettifyAddins::prettify_V8(language = "javascript")
}) %>%
gather(key,value) %>%
slice(1) %>%
pull(value) %>%
stringr::str_split("\n") %>%
unlist() %>%
tibble(line = .)
js_examples %>%
map_dfr(~ {
unnest(.x, lines) %>%
mutate(group_level = (stringr::str_length(code_line) - stringr::str_length(code_line %>% stringr::str_trim())) %>% dense_rank())
})
js_examples %>%
map_dfr(~ {
unnest(.x, lines) %>%
mutate(group_level = (stringr::str_length(code_line) - stringr::str_length(code_line %>% stringr::str_trim())) %>% dense_rank())
}) %>%
filter(group_level != 1)
js_examples %>%
map_dfr(~ {
unnest(.x, lines) %>%
mutate(group_level = (stringr::str_length(code_line) - stringr::str_length(code_line %>% stringr::str_trim())) %>% dense_rank())
}) %>%
filter(group_level != 1) %>%
filter(group_level == 2)
js_examples %>%
map_dfr(~ {
unnest(.x, lines) %>%
mutate(group_level = (stringr::str_length(code_line) - stringr::str_length(code_line %>% stringr::str_trim())) %>% dense_rank())
}) %>%
filter(group_level != 1) %>%
filter(group_level == 2) %>% distinct(code_line)
js_examples %>%
map_dfr(~ {
unnest(.x, lines) %>%
mutate(group_level = (stringr::str_length(code_line) - stringr::str_length(code_line %>% stringr::str_trim())) %>% dense_rank())
}) %>%
filter(group_level != 1) %>%
filter(group_level == 2) %>% distinct(code_line) %>% print(n = nrow(.))
c("series", "title", "yAxis",  "chart", "xAxis",
"tooltip",  "plotOptions", "subtitle", "name", "legend",
"accessibility",  "colors", "credits", "responsive",
"exporting", "colorAxis", "id", "marker",
"annotations", "boost", "caption","data"
) -> group_keys
js_examples %>%
map_dfr(~ {
unnest(.x, lines) %>%
mutate(group_level = (stringr::str_length(code_line) - stringr::str_length(code_line %>% stringr::str_trim())) %>% dense_rank())
}) %>%
filter(group_level != 1) %>%
filter(group_level == 2) %>% distinct(code_line) %>% print(n = nrow(.))
js_examples %>%
map_dfr(~ {
unnest(.x, lines) %>%
mutate(group_level = (stringr::str_length(code_line) - stringr::str_length(code_line %>% stringr::str_trim())) %>% dense_rank())
}) %>%
filter(group_level != 1) %>%
filter(group_level == 2) %>% distinct(code_line) %>%
rowwise() %>%
mutate(code_group = stringr::str_split(code_line, ":") %>% unlist() %>% .[[1]] %>% str_trim()) %>%
mutate(code_group = case_when(code_group %in% group_keys ~ code_group,TRUE ~ NA_character_)) %>%
filter(group == "bubble") %>%
ungroup() %>%
fill(code_group) %>%
group_by(group,code_group) %>%
group_split()
js_examples %>%
map_dfr(~ {
unnest(.x, lines) %>%
mutate(group_level = (stringr::str_length(code_line) - stringr::str_length(code_line %>% stringr::str_trim())) %>% dense_rank())
}) %>%
filter(group_level != 1) %>%
filter(group_level == 2) %>%
rowwise() %>%
mutate(code_group = stringr::str_split(code_line, ":") %>% unlist() %>% .[[1]] %>% str_trim()) %>%
mutate(code_group = case_when(code_group %in% group_keys ~ code_group,TRUE ~ NA_character_)) %>%
filter(group == "bubble") %>%
ungroup() %>%
fill(code_group) %>%
group_by(group,code_group) %>%
group_split()
js_examples %>%
map_dfr(~ {
unnest(.x, lines) %>%
mutate(group_level = (stringr::str_length(code_line) - stringr::str_length(code_line %>% stringr::str_trim())) %>% dense_rank())
}) %>%
filter(group_level != 1) %>%
# filter(group_level == 2) %>%
rowwise() %>%
mutate(code_group = stringr::str_split(code_line, ":") %>% unlist() %>% .[[1]] %>% str_trim()) %>%
mutate(code_group = case_when(code_group %in% group_keys ~ code_group,TRUE ~ NA_character_)) %>%
filter(group == "bubble") %>%
ungroup() %>%
fill(code_group) %>%
group_by(group,code_group) %>%
group_split()
c("series",  "yAxis",  "chart", "xAxis",
"tooltip",  "plotOptions", "subtitle", "name", "legend",
"accessibility",  "colors", "credits", "responsive",
"exporting", "colorAxis", "id", "marker",
"annotations", "boost", "caption","data"
) -> group_keys
js_examples %>%
map_dfr(~ {
unnest(.x, lines) %>%
mutate(group_level = (stringr::str_length(code_line) - stringr::str_length(code_line %>% stringr::str_trim())) %>% dense_rank())
}) %>%
filter(group_level != 1) %>%
# filter(group_level == 2) %>%
rowwise() %>%
mutate(code_group = stringr::str_split(code_line, ":") %>% unlist() %>% .[[1]] %>% str_trim()) %>%
mutate(code_group = case_when(code_group %in% group_keys ~ code_group,TRUE ~ NA_character_)) %>%
filter(group == "bubble") %>%
ungroup() %>%
fill(code_group) %>%
group_by(group,code_group) %>%
group_split()
c("title","series",  "yAxis",  "chart", "xAxis",
"tooltip",  "plotOptions", "subtitle", "name", "legend",
"accessibility",  "colors", "credits", "responsive",
"exporting", "colorAxis", "id", "marker",
"annotations", "boost", "caption","data"
) -> group_keys
js_examples %>%
map_dfr(~ {
unnest(.x, lines) %>%
mutate(group_level = (stringr::str_length(code_line) - stringr::str_length(code_line %>% stringr::str_trim())) %>% dense_rank())
}) %>%
filter(group_level != 1) %>%
# filter(group_level == 2) %>%
rowwise() %>%
mutate(code_group = stringr::str_split(code_line, ":") %>% unlist() %>% .[[1]] %>% str_trim()) %>%
mutate(code_group = case_when(code_group %in% group_keys ~ code_group,TRUE ~ NA_character_)) %>%
filter(group == "bubble") %>%
ungroup() %>%
fill(code_group) %>%
group_by(group,code_group) %>%
group_split()
js_examples %>%
map_dfr(~ {
unnest(.x, lines) %>%
mutate(group_level = (stringr::str_length(code_line) - stringr::str_length(code_line %>% stringr::str_trim())) %>% dense_rank())
}) %>%
filter(group_level != 1) %>%
# filter(group_level == 2) %>%
rowwise() %>%
mutate(code_group = stringr::str_split(code_line, ":") %>% unlist() %>% .[[1]] %>% str_trim()) %>%
mutate(code_group = case_when(code_group %in% group_keys & group_level == 2 ~ code_group,TRUE ~ NA_character_)) %>%
filter(group == "bubble") %>%
ungroup() %>%
fill(code_group) %>%
group_by(group,code_group) %>%
group_split()
c <- V8::v8()
c
js_examples %>%
map_dfr(~ {
unnest(.x, lines) %>%
mutate(group_level = (stringr::str_length(code_line) - stringr::str_length(code_line %>% stringr::str_trim())) %>% dense_rank())
}) %>%
filter(group_level != 1) %>%
# filter(group_level == 2) %>%
rowwise() %>%
mutate(code_group = stringr::str_split(code_line, ":") %>% unlist() %>% .[[1]] %>% str_trim()) %>%
mutate(code_group = case_when(code_group %in% group_keys & group_level == 2 ~ code_group,TRUE ~ NA_character_)) %>%
filter(group == "bubble") %>%
ungroup() %>%
fill(code_group) %>%
filter(code_group == "series")
js_examples %>%
map_dfr(~ {
unnest(.x, lines) %>%
mutate(group_level = (stringr::str_length(code_line) - stringr::str_length(code_line %>% stringr::str_trim())) %>% dense_rank())
}) %>%
filter(group_level != 1) %>%
# filter(group_level == 2) %>%
rowwise() %>%
mutate(code_group = stringr::str_split(code_line, ":") %>% unlist() %>% .[[1]] %>% str_trim()) %>%
mutate(code_group = case_when(code_group %in% group_keys & group_level == 2 ~ code_group,TRUE ~ NA_character_)) %>%
filter(group == "bubble") %>%
ungroup() %>%
fill(code_group) %>%
filter(code_group == "series") %>%
pull(code_line)
js_examples %>%
map_dfr(~ {
unnest(.x, lines) %>%
mutate(group_level = (stringr::str_length(code_line) - stringr::str_length(code_line %>% stringr::str_trim())) %>% dense_rank())
}) %>%
filter(group_level != 1) %>%
# filter(group_level == 2) %>%
rowwise() %>%
mutate(code_group = stringr::str_split(code_line, ":") %>% unlist() %>% .[[1]] %>% str_trim()) %>%
mutate(code_group = case_when(code_group %in% group_keys & group_level == 2 ~ code_group,TRUE ~ NA_character_)) %>%
filter(group == "bubble") %>%
ungroup() %>%
fill(code_group) %>%
filter(code_group == "series")
js_examples %>%
map_dfr(~ {
unnest(.x, lines) %>%
mutate(group_level = (stringr::str_length(code_line) - stringr::str_length(code_line %>% stringr::str_trim())) %>% dense_rank())
}) %>%
filter(group_level != 1) %>%
# filter(group_level == 2) %>%
rowwise() %>%
mutate(code_group = stringr::str_split(code_line, ":") %>% unlist() %>% .[[1]] %>% str_trim()) %>%
mutate(code_group = case_when(code_group %in% group_keys & group_level == 2 ~ code_group,TRUE ~ NA_character_)) %>%
filter(group == "bubble") %>%
ungroup() %>%
fill(code_group) %>%
filter(code_group == "series") %>%
mutate(code_line = case_when(
group_level == 2 ~ str_replace(paste0(code_group,":"),glue::glue("var {code_group} ="))
))
js_examples %>%
map_dfr(~ {
unnest(.x, lines) %>%
mutate(group_level = (stringr::str_length(code_line) - stringr::str_length(code_line %>% stringr::str_trim())) %>% dense_rank())
}) %>%
filter(group_level != 1) %>%
# filter(group_level == 2) %>%
rowwise() %>%
mutate(code_group = stringr::str_split(code_line, ":") %>% unlist() %>% .[[1]] %>% str_trim()) %>%
mutate(code_group = case_when(code_group %in% group_keys & group_level == 2 ~ code_group,TRUE ~ NA_character_)) %>%
filter(group == "bubble") %>%
ungroup() %>%
fill(code_group) %>%
filter(code_group == "series") %>%
mutate(code_line = case_when(
group_level == 2 ~ str_replace(paste0(code_group,":"),glue::glue("var {code_group} =")), TRUE ~ code_line
))
js_examples %>%
map_dfr(~ {
unnest(.x, lines) %>%
mutate(group_level = (stringr::str_length(code_line) - stringr::str_length(code_line %>% stringr::str_trim())) %>% dense_rank())
}) %>%
filter(group_level != 1) %>%
# filter(group_level == 2) %>%
rowwise() %>%
mutate(code_group = stringr::str_split(code_line, ":") %>% unlist() %>% .[[1]] %>% str_trim()) %>%
mutate(code_group = case_when(code_group %in% group_keys & group_level == 2 ~ code_group,TRUE ~ NA_character_)) %>%
filter(group == "bubble") %>%
ungroup() %>%
fill(code_group) %>%
filter(code_group == "series") %>%
mutate(code_line = case_when(
group_level == 2 ~ str_replace(code_group,paste0(code_group,":"),glue::glue("var {code_group} =")), TRUE ~ code_line
))
js_examples %>%
map_dfr(~ {
unnest(.x, lines) %>%
mutate(group_level = (stringr::str_length(code_line) - stringr::str_length(code_line %>% stringr::str_trim())) %>% dense_rank())
}) %>%
filter(group_level != 1) %>%
# filter(group_level == 2) %>%
rowwise() %>%
mutate(code_group = stringr::str_split(code_line, ":") %>% unlist() %>% .[[1]] %>% str_trim()) %>%
mutate(code_group = case_when(code_group %in% group_keys & group_level == 2 ~ code_group,TRUE ~ NA_character_)) %>%
filter(group == "bubble") %>%
ungroup() %>%
fill(code_group) %>%
filter(code_group == "series") %>%
mutate(code_line = case_when(
group_level == 2 ~ str_replace(paste0(code_group,":"),glue::glue("var {code_group} =")), TRUE ~ code_line
))
js_examples %>%
map_dfr(~ {
unnest(.x, lines) %>%
mutate(group_level = (stringr::str_length(code_line) - stringr::str_length(code_line %>% stringr::str_trim())) %>% dense_rank())
}) %>%
filter(group_level != 1) %>%
# filter(group_level == 2) %>%
rowwise() %>%
mutate(code_group = stringr::str_split(code_line, ":") %>% unlist() %>% .[[1]] %>% str_trim()) %>%
mutate(code_group = case_when(code_group %in% group_keys & group_level == 2 ~ code_group,TRUE ~ NA_character_)) %>%
filter(group == "bubble") %>%
ungroup() %>%
fill(code_group) %>%
filter(code_group == "series") %>%
mutate(code_line = case_when(
group_level == 2 ~ str_replace(code_group,paste0(code_group,":"),glue::glue("var {code_group} =")), TRUE ~ code_line
))
js_examples %>%
map_dfr(~ {
unnest(.x, lines) %>%
mutate(group_level = (stringr::str_length(code_line) - stringr::str_length(code_line %>% stringr::str_trim())) %>% dense_rank())
}) %>%
filter(group_level != 1) %>%
# filter(group_level == 2) %>%
rowwise() %>%
mutate(code_group = stringr::str_split(code_line, ":") %>% unlist() %>% .[[1]] %>% str_trim()) %>%
mutate(code_group = case_when(code_group %in% group_keys & group_level == 2 ~ code_group,TRUE ~ NA_character_)) %>%
filter(group == "bubble") %>%
ungroup() %>%
fill(code_group) %>%
filter(code_group == "series") %>%
mutate(code_line = case_when(
group_level == 2 ~ str_replace(code_line,paste0(code_group,":"),glue::glue("var {code_group} =")), TRUE ~ code_line
))
js_examples %>%
map_dfr(~ {
unnest(.x, lines) %>%
mutate(group_level = (stringr::str_length(code_line) - stringr::str_length(code_line %>% stringr::str_trim())) %>% dense_rank())
}) %>%
filter(group_level != 1) %>%
# filter(group_level == 2) %>%
rowwise() %>%
mutate(code_group = stringr::str_split(code_line, ":") %>% unlist() %>% .[[1]] %>% str_trim()) %>%
mutate(code_group = case_when(code_group %in% group_keys & group_level == 2 ~ code_group,TRUE ~ NA_character_)) %>%
filter(group == "bubble") %>%
ungroup() %>%
fill(code_group) %>%
filter(code_group == "series") %>%
mutate(code_line = case_when(
group_level == 2 ~ str_replace(code_line,paste0(code_group,":"),glue::glue("var {code_group} =")), TRUE ~ code_line
)) %>%
pull(code_line)
pull(code_line)
js_examples %>%
map_dfr(~ {
unnest(.x, lines) %>%
mutate(group_level = (stringr::str_length(code_line) - stringr::str_length(code_line %>% stringr::str_trim())) %>% dense_rank())
}) %>%
filter(group_level != 1) %>%
# filter(group_level == 2) %>%
rowwise() %>%
mutate(code_group = stringr::str_split(code_line, ":") %>% unlist() %>% .[[1]] %>% str_trim()) %>%
mutate(code_group = case_when(code_group %in% group_keys & group_level == 2 ~ code_group,TRUE ~ NA_character_)) %>%
filter(group == "bubble") %>%
ungroup() %>%
fill(code_group) %>%
filter(code_group == "series") %>%
mutate(code_line = case_when(
group_level == 2 ~ str_replace(code_line,paste0(code_group,":"),glue::glue("var {code_group} =")), TRUE ~ code_line
)) %>%
pull(code_line)
js_examples %>%
map_dfr(~ {
unnest(.x, lines) %>%
mutate(group_level = (stringr::str_length(code_line) - stringr::str_length(code_line %>% stringr::str_trim())) %>% dense_rank())
}) %>%
filter(group_level != 1) %>%
# filter(group_level == 2) %>%
rowwise() %>%
mutate(code_group = stringr::str_split(code_line, ":") %>% unlist() %>% .[[1]] %>% str_trim()) %>%
mutate(code_group = case_when(code_group %in% group_keys & group_level == 2 ~ code_group,TRUE ~ NA_character_)) %>%
filter(group == "bubble") %>%
ungroup() %>%
fill(code_group) %>%
filter(code_group == "series") %>%
mutate(code_line = case_when(
group_level == 2 ~ str_replace(code_line,paste0(code_group,":"),glue::glue("var {code_group} =")), TRUE ~ code_line
)) %>%
pull(code_line) %>% paste(collapse = "")
js_examples %>%
map_dfr(~ {
unnest(.x, lines) %>%
mutate(group_level = (stringr::str_length(code_line) - stringr::str_length(code_line %>% stringr::str_trim())) %>% dense_rank())
}) %>%
filter(group_level != 1) %>%
# filter(group_level == 2) %>%
rowwise() %>%
mutate(code_group = stringr::str_split(code_line, ":") %>% unlist() %>% .[[1]] %>% str_trim()) %>%
mutate(code_group = case_when(code_group %in% group_keys & group_level == 2 ~ code_group,TRUE ~ NA_character_)) %>%
filter(group == "bubble") %>%
ungroup() %>%
fill(code_group) %>%
filter(code_group == "series") %>%
mutate(code_line = case_when(
group_level == 2 ~ str_replace(code_line,paste0(code_group,":"),glue::glue("var {code_group} =")), TRUE ~ code_line
)) %>%
pull(code_line) %>% paste(collapse = "") %>% str_trim()
js_examples %>%
map_dfr(~ {
unnest(.x, lines) %>%
mutate(group_level = (stringr::str_length(code_line) - stringr::str_length(code_line %>% stringr::str_trim())) %>% dense_rank())
}) %>%
filter(group_level != 1) %>%
# filter(group_level == 2) %>%
rowwise() %>%
mutate(code_group = stringr::str_split(code_line, ":") %>% unlist() %>% .[[1]] %>% str_trim()) %>%
mutate(code_group = case_when(code_group %in% group_keys & group_level == 2 ~ code_group,TRUE ~ NA_character_)) %>%
filter(group == "bubble") %>%
ungroup() %>%
fill(code_group) %>%
filter(code_group == "series") %>%
mutate(code_line = case_when(
group_level == 2 ~ str_replace(code_line,paste0(code_group,":"),glue::glue("var {code_group} =")), TRUE ~ code_line
)) %>%
pull(code_line) %>% paste(collapse = "") %>% str_trim() %>% str_squish()
test_json <- "[ { data: [ { x: 95, y: 95, z: 13.8, name: \"BE\", country: \"Belgium\" }, { x: 86.5, y: 102.9, z: 14.7, name: \"DE\", country: \"Germany\" }, { x: 80.8, y: 91.5, z: 15.8, name: \"FI\", country: \"Finland\" }, { x: 80.4, y: 102.5, z: 12, name: \"NL\", country: \"Netherlands\" }, { x: 80.3, y: 86.1, z: 11.8, name: \"SE\", country: \"Sweden\" }, { x: 78.4, y: 70.1, z: 16.6, name: \"ES\", country: \"Spain\" }, { x: 74.2, y: 68.5, z: 14.5, name: \"FR\", country: \"France\" }, { x: 73.5, y: 83.1, z: 10, name: \"NO\", country: \"Norway\" }, { x: 71, y: 93.2, z: 24.7, name: \"UK\", country: \"United Kingdom\" }, { x: 69.2, y: 57.6, z: 10.4, name: \"IT\", country: \"Italy\" }, { x: 68.6, y: 20, z: 16, name: \"RU\", country: \"Russia\" }, { x: 65.5, y: 126.4, z: 35.3, name: \"US\", country: \"United States\" }, { x: 65.4, y: 50.8, z: 28.5, name: \"HU\", country: \"Hungary\" }, { x: 63.4, y: 51.8, z: 15.4, name: \"PT\", country: \"Portugal\" }, { x: 64, y: 82.9, z: 31.3, name: \"NZ\", country: \"New Zealand\" } ] } ]"
rm(c)
ctx <- V8::v8()
ctx$console()
test_json <- "[ { data: [ { x: 95, y: 95, z: 13.8, name: \"BE\", country: \"Belgium\" }, { x: 86.5, y: 102.9, z: 14.7, name: \"DE\", country: \"Germany\" }, { x: 80.8, y: 91.5, z: 15.8, name: \"FI\", country: \"Finland\" }, { x: 80.4, y: 102.5, z: 12, name: \"NL\", country: \"Netherlands\" }, { x: 80.3, y: 86.1, z: 11.8, name: \"SE\", country: \"Sweden\" }, { x: 78.4, y: 70.1, z: 16.6, name: \"ES\", country: \"Spain\" }, { x: 74.2, y: 68.5, z: 14.5, name: \"FR\", country: \"France\" }, { x: 73.5, y: 83.1, z: 10, name: \"NO\", country: \"Norway\" }, { x: 71, y: 93.2, z: 24.7, name: \"UK\", country: \"United Kingdom\" }, { x: 69.2, y: 57.6, z: 10.4, name: \"IT\", country: \"Italy\" }, { x: 68.6, y: 20, z: 16, name: \"RU\", country: \"Russia\" }, { x: 65.5, y: 126.4, z: 35.3, name: \"US\", country: \"United States\" }, { x: 65.4, y: 50.8, z: 28.5, name: \"HU\", country: \"Hungary\" }, { x: 63.4, y: 51.8, z: 15.4, name: \"PT\", country: \"Portugal\" }, { x: 64, y: 82.9, z: 31.3, name: \"NZ\", country: \"New Zealand\" } ] } ]"
ctx$assign("testj" = test_json)
tx$assign("testj" = JS(test_json))
test_json <- "[ { data: [ { x: 95, y: 95, z: 13.8, name: \"BE\", country: \"Belgium\" }, { x: 86.5, y: 102.9, z: 14.7, name: \"DE\", country: \"Germany\" }, { x: 80.8, y: 91.5, z: 15.8, name: \"FI\", country: \"Finland\" }, { x: 80.4, y: 102.5, z: 12, name: \"NL\", country: \"Netherlands\" }, { x: 80.3, y: 86.1, z: 11.8, name: \"SE\", country: \"Sweden\" }, { x: 78.4, y: 70.1, z: 16.6, name: \"ES\", country: \"Spain\" }, { x: 74.2, y: 68.5, z: 14.5, name: \"FR\", country: \"France\" }, { x: 73.5, y: 83.1, z: 10, name: \"NO\", country: \"Norway\" }, { x: 71, y: 93.2, z: 24.7, name: \"UK\", country: \"United Kingdom\" }, { x: 69.2, y: 57.6, z: 10.4, name: \"IT\", country: \"Italy\" }, { x: 68.6, y: 20, z: 16, name: \"RU\", country: \"Russia\" }, { x: 65.5, y: 126.4, z: 35.3, name: \"US\", country: \"United States\" }, { x: 65.4, y: 50.8, z: 28.5, name: \"HU\", country: \"Hungary\" }, { x: 63.4, y: 51.8, z: 15.4, name: \"PT\", country: \"Portugal\" }, { x: 64, y: 82.9, z: 31.3, name: \"NZ\", country: \"New Zealand\" } ] } ]"
ctx$assign("testj" = JS(test_json))
ctx$assign("mtcars",mtcars)
ctx$console()
print(test_json)
print(test_json) %>% cat()
print(test_json) %>% cat() %>% writeLines()
writeLines(test_json)
ctx$assign("test" = JS(test_json))
ctx$assign("test" = test_json)
jsonlite::toJSON(test_json)
ctx$assign("test" = jsonlite::toJSON(test_json))
ctx$assign("test" = list(test_json = test_json))
ctx$assign("test" = tibble(test_json = test_json))
test_json <- "series = [ { data: [ { x: 95, y: 95, z: 13.8, name: \"BE\", country: \"Belgium\" }, { x: 86.5, y: 102.9, z: 14.7, name: \"DE\", country: \"Germany\" }, { x: 80.8, y: 91.5, z: 15.8, name: \"FI\", country: \"Finland\" }, { x: 80.4, y: 102.5, z: 12, name: \"NL\", country: \"Netherlands\" }, { x: 80.3, y: 86.1, z: 11.8, name: \"SE\", country: \"Sweden\" }, { x: 78.4, y: 70.1, z: 16.6, name: \"ES\", country: \"Spain\" }, { x: 74.2, y: 68.5, z: 14.5, name: \"FR\", country: \"France\" }, { x: 73.5, y: 83.1, z: 10, name: \"NO\", country: \"Norway\" }, { x: 71, y: 93.2, z: 24.7, name: \"UK\", country: \"United Kingdom\" }, { x: 69.2, y: 57.6, z: 10.4, name: \"IT\", country: \"Italy\" }, { x: 68.6, y: 20, z: 16, name: \"RU\", country: \"Russia\" }, { x: 65.5, y: 126.4, z: 35.3, name: \"US\", country: \"United States\" }, { x: 65.4, y: 50.8, z: 28.5, name: \"HU\", country: \"Hungary\" }, { x: 63.4, y: 51.8, z: 15.4, name: \"PT\", country: \"Portugal\" }, { x: 64, y: 82.9, z: 31.3, name: \"NZ\", country: \"New Zealand\" } ] } ]"
ctx$assign("test", JS(test_json))
ctx$console()
